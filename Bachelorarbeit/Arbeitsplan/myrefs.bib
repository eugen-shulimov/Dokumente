@inproceedings{10.1145/2660190.2662113,
	author = {Zhang, Bo and Becker, Martin},
	title = {Variability code analysis using the VITAL tool},
	year = {2014},
	isbn = {9781450329804},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/2660190.2662113},
	doi = {10.1145/2660190.2662113},
	abstract = {As a product line evolves over time, variability realizations become overly complex and difficult to understand. This causes practical challenges in product line maintenance. To solve this issue, the VITAL tool is developed to automatically extract a variability reflexion model from variability code and conduct further analyses. In this paper, variability code analysis process using the VITAL tool is introduced, and each step of the analysis is demonstrated with an example product line.},
	booktitle = {Proceedings of the 6th International Workshop on Feature-Oriented Software Development},
	pages = {17–22},
	numpages = {6},
	keywords = {variability code analysis, reverse engineering variability, product line evolution, conditional compilation},
	location = {V\"{a}ster\r{a}s, Sweden},
	series = {FOSD '14}
}

@Inbook{Fischer1972,
author="Fischer, Michael J.",
editor="Miller, Raymond E.
and Thatcher, James W.
and Bohlinger, Jean D.",
title="Efficiency of Equivalence Algorithms",
bookTitle="Complexity of Computer Computations: Proceedings of a symposium on the Complexity of Computer Computations, held March 20--22, 1972, at the IBM Thomas J. Watson Research Center, Yorktown Heights, New York, and sponsored by the Office of Naval Research, Mathematics Program, IBM World Trade Corporation, and the IBM Research Mathematical Sciences Department",
year="1972",
publisher="Springer US",
address="Boston, MA",
pages="153--167",
abstract="The equivalence problem is to determine the finest partition on a set that is consistent with a sequence of assertions of the form ``x ≡ y''. A strategy for doing this on a computer processes the assertions serially, maintaining always in storage a representation of the partition defined by the assertions so far encountered. To process the command ``x ≡ y'', the equivalence classes of x and y are determined. If they are the same, nothing further is done; otherwise the two classes are merged together.",
isbn="978-1-4684-2001-2",
doi="10.1007/978-1-4684-2001-2_14",
url="https://doi.org/10.1007/978-1-4684-2001-2_14"
}